
'use server';

import { collection, addDoc } from 'firebase/firestore';
import { db } from '@/lib/firebase';
import type { Preparation } from '@/lib/types';
import type { RecipeConceptOutput } from '@/ai/flows/recipe-workshop-flow';

/**
 * Creates a new preparation from a concept generated by the workshop AI.
 * It only creates the main preparation data.
 * The linking process is handled by the user on the detail page.
 * @param concept - The recipe concept generated by the AI.
 * @returns The ID of the newly created preparation.
 */
export async function createPreparationFromWorkshop(concept: RecipeConceptOutput): Promise<string> {
    try {
        const prepData: Partial<Omit<Preparation, 'id'>> = {
            type: 'Pr√©paration',
            name: concept.name,
            description: concept.description,
            imageUrl: concept.imageUrl || '',
            procedure_preparation: concept.procedure_preparation,
            procedure_cuisson: concept.procedure_cuisson,
            procedure_service: concept.procedure_service,
            difficulty: concept.difficulty,
            duration: concept.duration,
            productionQuantity: concept.productionQuantity,
            productionUnit: concept.productionUnit,
            usageUnit: concept.usageUnit,
            category: "Sauces chaudes", // Default value, user should change it
        };

        const prepsCol = collection(db, 'preparations');
        const prepDocRef = await addDoc(prepsCol, prepData);
        
        return prepDocRef.id;

    } catch (error) {
        console.error("Error creating preparation from workshop:", error);
        if (error instanceof Error) {
            throw new Error(`Failed to create preparation: ${error.message}`);
        }
        throw new Error("An unknown error occurred while creating the preparation.");
    }
}
